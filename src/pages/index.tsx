import Head from 'next/head';
import { API_REQUEST } from 'src/service/api.service';
import { GetServerSideProps } from 'next';
import { IMovis, MyList, Product } from 'src/interfaces/app.interface';
import { Header, Hero, Modal, Row,  } from 'src/components';
import { useInfoStore } from 'src/store';
import SubscriptionPlan from 'src/components/subscription-plan/subscriptionplan';
import { getList } from 'src/helpers/lists';

import{useEffect ,useContext} from 'react'






export default function Home({ trending, 
    	topRated,
	 tvTopRated,
	  popular, 
	  comedy, 
	  documentary, 
	  family,
	   horror,
	  products,
  	subscription,
	 list
	}: HomeProps):JSX.Element{
	
	
   const { modal} = useInfoStore()

 
	if (!subscription.length) return <SubscriptionPlan products={products} />;
	
		return (
		
			<div className={`relative min-h-screen bg-gradient-to-b from-gray-900/70 to-[#010511] ${modal && '!h-screen overflow-hidden'}`}>
			<Head>
				<title>Home-Sammi</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/logo.svg' />
			</Head>
			<Header/>
		
			<main className='relative pl-4 pb-4 lg:space-y-24 lg:pl-16'>
				<Hero trending ={trending} />
				
			<section>
				    <Row title='Top Rated' movies={topRated} />
					<Row title='Tv Show' movies={tvTopRated} isBig={true}/>
						{list.length ? <Row title='My List' movies={list} /> :null }
					
					<Row title=' Popular' movies={popular} />
					<Row title='Comedy' movies={comedy} />
					<Row title='Documentary' movies={documentary} />
					<Row title='Family' movies={family} />
					<Row title='Horror' movies={horror} />
						
			</section>
			</main>
			{modal && <Modal/>}
		</div>
	);
	}
	

export const getServerSideProps: GetServerSideProps<HomeProps> = async ({ req }) => {
	const user_id = req.cookies.user_id;
	if (!user_id){
		return{
			redirect:{destination:'/auth',permanent:false}
		}
	}
	const [trending, topRated, tvTopRated, moviePopular, Comedy, Documentary, Family, Horror, products, subscription ] = await Promise.all ([
	 fetch(API_REQUEST.trending).then(res => res.json()),
	 fetch(API_REQUEST.top_rated).then(res => res.json()),
     fetch(API_REQUEST.tv_top_Rated).then(res => res.json()),
	 fetch(API_REQUEST.movie_popular).then(res => res.json()),
     fetch(API_REQUEST.Comedy).then(res => res.json()),
	 fetch(API_REQUEST.Documentary).then(res => res.json()),
	 fetch(API_REQUEST.Family).then(res => res.json()),
	 fetch(API_REQUEST.Horror).then(res => res.json()),
	fetch(API_REQUEST.products_list).then(res => res.json()),
	fetch(`${API_REQUEST.subscription}/${user_id}`).then(res => res.json()),
 ]);
  


      const myList: MyList [] = await getList(user_id)
	
	return {
		props:{
			trending: trending.results,
			topRated: topRated.results,
			tvTopRated: tvTopRated.results,
			popular: moviePopular.results,
			comedy: Comedy.results,
			documentary: Documentary.results,
			family: Family.results,
			horror: Horror.results,
			products:products.products.data,
			subscription:subscription.subscription.data,
			list: myList.map(c => c.product)
		}
	}
}
interface HomeProps{
	trending:IMovis[]
	topRated: IMovis[]
	tvTopRated: IMovis[]
	popular: IMovis[]
	comedy: IMovis[]
	documentary: IMovis[]
	family: IMovis[]
	horror: IMovis[]
	products: Product[]
	subscription:string[]
	list: IMovis[];
}